
import dao.connectionprovider;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import javax.swing.table.TableModel;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import dao.pharmacyutils;
import java.io.FileOutputStream;
import com.itextpdf.text.*;
import com.itextpdf.text.pdf.*;
import comman.openpdf;
import java.io.FileOutputStream;
import java.util.Date;
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author ADMIN
 */
public class sellmedicine extends javax.swing.JFrame {

    public String NumberPattern = "^[0-9]*$";
    private int finalTotalPrice = 0;
    private String billId = "";
    private String username = "";

    public sellmedicine() {
        initComponents();
    }

    public sellmedicine(String tempUsername) {
        initComponents();
        username = tempUsername;
        setLocationRelativeTo(null);
    }

    private void medicineName(String nameoruniqueid) {
        DefaultTableModel model = (DefaultTableModel) medicinetable.getModel();
        model.setRowCount(0);

        try (Connection con = connectionprovider.getcon(); Statement st = con.createStatement(); ResultSet rs = st.executeQuery("SELECT uniqueid, name FROM medicine WHERE name LIKE '" + nameoruniqueid + "%' OR uniqueid LIKE '" + nameoruniqueid + "%'");) {

            while (rs.next()) {
                model.addRow(new Object[]{rs.getString("uniqueid"), rs.getString("name")});
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error fetching data: " + e.getMessage());
        }

    }

    private void clearmedicinefields() {
        txtuniqueid.setText("");
        txtname.setText("");
        txtcompanyname.setText("");
        txtprice.setText("");
        txtunits.setText("");
        txttotalprice.setText("");
    }

    public String getuniqueid(String prefix) {
        return prefix + System.nanoTime();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        txtsearch = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        medicinetable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtcompanyname = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtuniqueid = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtname = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtprice = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txttotalprice = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        carttable = new javax.swing.JTable();
        txtaddtocart = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        lblfinal = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        txtunits = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("SELL MEDICINE");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 20, -1, -1));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 75, 1022, 10));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/close.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 20, -1, -1));

        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(51, 0, 51));
        jButton2.setText("SEARCH");
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(58, 103, -1, -1));

        txtsearch.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtsearch.setForeground(new java.awt.Color(51, 0, 51));
        txtsearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtsearchKeyReleased(evt);
            }
        });
        getContentPane().add(txtsearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(58, 142, 228, -1));

        jScrollPane1.setForeground(new java.awt.Color(51, 0, 51));

        medicinetable.setAutoCreateRowSorter(true);
        medicinetable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null}
            },
            new String [] {
                "Medicine"
            }
        ));
        medicinetable.setRowSelectionAllowed(false);
        medicinetable.setShowVerticalLines(true);
        medicinetable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                medicinetableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(medicinetable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 186, 282, 550));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Medicine ID");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(361, 170, 290, -1));

        txtcompanyname.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtcompanyname.setForeground(new java.awt.Color(51, 0, 51));
        getContentPane().add(txtcompanyname, new org.netbeans.lib.awtextra.AbsoluteConstraints(371, 369, 310, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Name");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(371, 240, 310, -1));

        txtuniqueid.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtuniqueid.setForeground(new java.awt.Color(51, 0, 51));
        getContentPane().add(txtuniqueid, new org.netbeans.lib.awtextra.AbsoluteConstraints(365, 196, 340, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Company Name");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(366, 330, 320, -1));

        txtname.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtname.setForeground(new java.awt.Color(51, 0, 51));
        getContentPane().add(txtname, new org.netbeans.lib.awtextra.AbsoluteConstraints(366, 270, 340, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Price Per Unit");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(729, 170, 290, -1));

        txtprice.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtprice.setForeground(new java.awt.Color(51, 0, 51));
        getContentPane().add(txtprice, new org.netbeans.lib.awtextra.AbsoluteConstraints(729, 196, 300, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("No. of Units");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(729, 240, 300, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Total Price");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 330, 250, -1));

        txttotalprice.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txttotalprice.setForeground(new java.awt.Color(51, 0, 51));
        getContentPane().add(txttotalprice, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 370, 310, -1));

        carttable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null}
            },
            new String [] {
                "Medicine ID", "Name", "Company Name", "Price per unit", "No. of units", "Total Price"
            }
        ));
        carttable.setShowHorizontalLines(true);
        carttable.setShowVerticalLines(true);
        carttable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                carttableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(carttable);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 510, 707, 190));

        txtaddtocart.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtaddtocart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add to cart.png"))); // NOI18N
        txtaddtocart.setText("ADD TO CART");
        txtaddtocart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtaddtocartActionPerformed(evt);
            }
        });
        getContentPane().add(txtaddtocart, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 440, -1, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("RS.");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 720, 37, -1));

        lblfinal.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblfinal.setForeground(new java.awt.Color(255, 255, 255));
        lblfinal.setText("00");
        getContentPane().add(lblfinal, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 720, 100, -1));

        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/generate bill & print.png"))); // NOI18N
        jButton4.setText("PURCHASE AND PRINT");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 730, -1, -1));

        txtunits.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtunitsActionPerformed(evt);
            }
        });
        txtunits.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtunitsKeyReleased(evt);
            }
        });
        getContentPane().add(txtunits, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 270, 240, -1));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/adminDashboardBackground.png"))); // NOI18N
        jLabel9.setText("jLabel9");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1120, 770));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        medicineName("");
        txtuniqueid.setEditable(false);
        txtname.setEditable(false);
        txtcompanyname.setEditable(false);
        txtprice.setEditable(false);
        //txtunits.setEditable(false);
        txttotalprice.setEditable(false);
    }//GEN-LAST:event_formComponentShown

    private void txtsearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearchKeyReleased
        medicineName(txtsearch.getText());
    }//GEN-LAST:event_txtsearchKeyReleased

    private void medicinetableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_medicinetableMouseClicked
        int index = medicinetable.getSelectedRow();
        TableModel model = medicinetable.getModel();
        String uniqueId = model.getValueAt(index, 0).toString();

        try (Connection con = connectionprovider.getcon(); Statement st = con.createStatement(); ResultSet rs = st.executeQuery("SELECT * FROM medicine WHERE uniqueid = '" + uniqueId + "'");) {

            if (rs.next()) {
                txtuniqueid.setText(uniqueId);
                txtname.setText(rs.getString("name"));
                txtcompanyname.setText(rs.getString("companyname"));
                txtprice.setText(rs.getString("price"));
                txtunits.setText("");
                txttotalprice.setText("");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
        }
    }//GEN-LAST:event_medicinetableMouseClicked

    private void txtaddtocartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtaddtocartActionPerformed

        String units = txtunits.getText().trim();
        String uniqueId = txtuniqueid.getText().trim();
        String name = txtname.getText().trim();
        String companyName = txtcompanyname.getText().trim();
        String price = txtprice.getText().trim();
        String totalPrice = txttotalprice.getText().trim();

        if (units.isEmpty() || uniqueId.isEmpty() || price.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter all required fields.");
            return;
        }

        try {
            int unitCount = Integer.parseInt(units);
            int unitPrice = Integer.parseInt(price);
            int total = unitCount * unitPrice;

            Connection con = connectionprovider.getcon();
            PreparedStatement ps = con.prepareStatement("SELECT quantity FROM medicine WHERE uniqueid = ?");
            ps.setString(1, uniqueId);
            ResultSet rs = ps.executeQuery();

            if (rs.next()) {
                int availableStock = rs.getInt("quantity");

                if (availableStock >= unitCount) {
                    DefaultTableModel dtm = (DefaultTableModel) carttable.getModel();

                    // ✅ Check if the table model is properly initialized
                    if (dtm == null) {
                        JOptionPane.showMessageDialog(null, "Cart table model is not initialized.");
                        return;
                    }

                    // ✅ Check for duplicate entries in the cart table
                    boolean exists = false;
                    for (int i = 0; i < dtm.getRowCount(); i++) {
                        Object cellValue = dtm.getValueAt(i, 0);
                        if (cellValue != null && cellValue.toString().equals(uniqueId)) {
                            exists = true;
                            break;
                        }
                    }

                    if (!exists) {
                        dtm.addRow(new Object[]{uniqueId, name, companyName, price, units, total});
                        finalTotalPrice += total;
                        lblfinal.setText(String.valueOf(finalTotalPrice));
                        JOptionPane.showMessageDialog(null, "Added successfully.");
                        clearmedicinefields();
                    } else {
                        JOptionPane.showMessageDialog(null, "Medicine already exists in cart.");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Out of stock! Only " + availableStock + " left.");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Medicine ID not found in database.");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Invalid input: Please enter a valid number for units and price.");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Database error: " + e.getMessage());
        }


    }//GEN-LAST:event_txtaddtocartActionPerformed

    private void txtunitsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtunitsKeyReleased

        String units = txtunits.getText().trim();
        String price = txtprice.getText().trim();

        if (!units.isEmpty() && !price.isEmpty()) {
            if (!units.matches(NumberPattern)) {
                JOptionPane.showMessageDialog(null, "No of Units field is invalid.");
                txtunits.setText(""); // Clear invalid input
            } else {
                try {
                    int unitCount = Integer.parseInt(units);
                    int unitPrice = Integer.parseInt(price);
                    int totalprice = unitCount * unitPrice;
                    txttotalprice.setText(String.valueOf(totalprice));
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(null, "Invalid number format.");
                    txttotalprice.setText("");
                }
            }
        } else {
            txttotalprice.setText(""); // Reset if empty
        }


    }//GEN-LAST:event_txtunitsKeyReleased

    private void carttableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_carttableMouseClicked
        // TODO add your handling code here:
        
        int index = carttable.getSelectedRow();
        
        int a = JOptionPane.showConfirmDialog(null,"Do you  want to delete this medicine","select",JOptionPane.YES_NO_OPTION);
        if(a==0){
            try {
                TableModel model = carttable.getModel();
        String total = model.getValueAt(index, 5).toString();
        finalTotalPrice = finalTotalPrice - Integer.parseInt(total);
        lblfinal.setText(String.valueOf(finalTotalPrice));
        ((DefaultTableModel) carttable.getModel()).removeRow(index);
                
            }
            catch(Exception e){
             JOptionPane.showMessageDialog(null,e);
        }
        }
    }//GEN-LAST:event_carttableMouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
                                            
    try {
        if (finalTotalPrice != 0) {
            billId = getuniqueid("bill");
            DefaultTableModel dtm = (DefaultTableModel) carttable.getModel();

            if (carttable != null && carttable.getRowCount() != 0) {  // ✅ Check if carttable is not null
                try (Connection con = connectionprovider.getcon()) {
                    if (con != null) {
                        for (int i = 0; i < carttable.getRowCount(); i++) {
                            String uniqueId = dtm.getValueAt(i, 0) != null ? dtm.getValueAt(i, 0).toString() : ""; // ✅ Null check
                            String unitsStr = dtm.getValueAt(i, 4) != null ? dtm.getValueAt(i, 4).toString() : "0"; // ✅ Null check
                            int purchasedUnits = Integer.parseInt(unitsStr);

                            PreparedStatement ps = con.prepareStatement("UPDATE medicine SET quantity = quantity - ? WHERE uniqueid = ?");
                            ps.setInt(1, purchasedUnits);
                            ps.setString(2, uniqueId);
                            ps.executeUpdate();
                        }
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Database Error: " + e.getMessage());
                    return;
                }
            }

            // ✅ Fix date formatting issue
            java.sql.Date sqlDate = new java.sql.Date(System.currentTimeMillis());

            // ✅ Insert bill details
            try (Connection con = connectionprovider.getcon()) {
                if (con != null) {
                    PreparedStatement ps = con.prepareStatement("INSERT INTO bill (billId, billDate, totalPaid, generatedBy) VALUES (?, ?, ?, ?)");
                    ps.setString(1, billId);
                    ps.setDate(2, sqlDate);
                    ps.setDouble(3, finalTotalPrice);
                    ps.setString(4, username);
                    ps.executeUpdate();
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Database Error: " + e.getMessage());
                return;
            }

            // ✅ Generate PDF
            com.itextpdf.text.Document docs = new com.itextpdf.text.Document();
            try {
                PdfWriter.getInstance(docs, new FileOutputStream(pharmacyutils.billPath + billId + ".pdf"));
                docs.open();

                docs.add(new Paragraph("Pharmacy Management System\n"));
                docs.add(new Paragraph("----------------------------------"));
                docs.add(new Paragraph("Bill Id: " + billId + "\nDate: " + sqlDate + "\nTotal Paid: " + finalTotalPrice));
                docs.add(new Paragraph("----------------------------------"));

                PdfPTable tbl = new PdfPTable(6);
                tbl.addCell("Medicine ID");
                tbl.addCell("Name");
                tbl.addCell("Company Name");
                tbl.addCell("Price per Unit");
                tbl.addCell("No of Units");
                tbl.addCell("Sub Total Price");

                for (int i = 0; i < carttable.getRowCount(); i++) {
                    for (int j = 0; j < 6; j++) {
                        tbl.addCell(carttable.getValueAt(i, j) != null ? carttable.getValueAt(i, j).toString() : ""); // ✅ Null check
                    }
                }

                docs.add(tbl);
                docs.add(new Paragraph("----------------------------------"));
                docs.add(new Paragraph("Thank you! Please visit again..."));

                docs.close();
                openpdf.openbyid(String.valueOf(billId));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "PDF Generation Error: " + e.getMessage());
            }

            setVisible(false);
            new sellmedicine(username).setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Please add medicine to cart");
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Unexpected error: " + e.getMessage());
    }

 
    }//GEN-LAST:event_jButton4ActionPerformed

    private void txtunitsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtunitsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtunitsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(sellmedicine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(sellmedicine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(sellmedicine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(sellmedicine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new sellmedicine().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable carttable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblfinal;
    private javax.swing.JTable medicinetable;
    private javax.swing.JButton txtaddtocart;
    private javax.swing.JTextField txtcompanyname;
    private javax.swing.JTextField txtname;
    private javax.swing.JTextField txtprice;
    private javax.swing.JTextField txtsearch;
    private javax.swing.JTextField txttotalprice;
    private javax.swing.JTextField txtuniqueid;
    private javax.swing.JTextField txtunits;
    // End of variables declaration//GEN-END:variables
}
